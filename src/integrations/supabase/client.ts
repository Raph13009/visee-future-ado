// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

console.log('--- SUPABASE DEBUG ---');
console.log('process.env.NODE_ENV:', import.meta.env.MODE);
console.log('cwd:', window.location.href);
console.log('VITE_SUPABASE_URL:', import.meta.env.VITE_SUPABASE_URL);
console.log('VITE_SUPABASE_ANON_KEY:', import.meta.env.VITE_SUPABASE_ANON_KEY);

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!SUPABASE_URL) {
  console.error('‚ùå VITE_SUPABASE_URL is missing or empty!');
  throw new Error('VITE_SUPABASE_URL is missing or empty!');
}
if (!SUPABASE_PUBLISHABLE_KEY) {
  console.error('‚ùå VITE_SUPABASE_ANON_KEY is missing or empty!');
  throw new Error('VITE_SUPABASE_ANON_KEY is missing or empty!');
}

console.log('‚úÖ Configuration Supabase OK');

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});

// Test de connexion
console.log('üîó Test de connexion Supabase...');
supabase.from('leads').select('count').limit(1).then(({ data, error }) => {
  if (error) {
    console.error('‚ùå Erreur de connexion Supabase:', error);
  } else {
    console.log('‚úÖ Connexion Supabase OK');
  }
});